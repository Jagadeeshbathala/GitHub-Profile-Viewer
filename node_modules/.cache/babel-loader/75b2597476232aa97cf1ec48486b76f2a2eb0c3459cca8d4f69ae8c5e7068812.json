{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rajas\\\\OneDrive\\\\Desktop\\\\GitHub Profile\\\\my-app\\\\src\\\\pages\\\\ProfilePage.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import { useParams } from 'react-router-dom';\n// import Profile from '../components/Profile';\n\n// function ProfilePage() {\n//   const { username } = useParams();\n//   const [user, setUser] = useState(null);\n\n//   useEffect(() => {\n//     const fetchUser = async () => {\n//       try {\n//         const response = await fetch(`https://api.github.com/users/${username}`);\n//         // const response = await fetch(`https://api.github.com/users/sudheerj`);\n//         const userData = await response.json();\n//         setUser(userData);\n//       } catch (error) {\n//         console.error('Error fetching user data:', error);\n//       }\n//     };\n\n//     fetchUser();\n//   }, [username]);\n\n//   return (\n//     <div>\n//       {user ? <Profile user={user} /> : <p>Loading...</p>}\n//     </div>\n//   );\n// }\n\n// export default ProfilePage;\n\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport Profile from '../components/Profile';\nimport Pagination from '../components/Pagination'; // Import the Pagination component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ProfilePage() {\n  _s();\n  const {\n    username\n  } = useParams();\n  const [user, setUser] = useState(null);\n  const [repositories, setRepositories] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const repositoriesPerPage = 10; // Number of repositories to display per page\n\n  useEffect(() => {\n    const fetchUser = async () => {\n      try {\n        const response = await fetch(`https://api.github.com/users/${username}`);\n        const userData = await response.json();\n        setUser(userData);\n      } catch (error) {\n        console.error('Error fetching user data:', error);\n      }\n    };\n    fetchUser();\n  }, [username]);\n  useEffect(() => {\n    const fetchRepositories = async () => {\n      try {\n        const response = await fetch(`https://api.github.com/users/${username}/repos`);\n        const repositoriesData = await response.json();\n        setRepositories(repositoriesData);\n      } catch (error) {\n        console.error('Error fetching repositories:', error);\n      }\n    };\n    fetchRepositories();\n  }, [username]);\n  const indexOfLastRepo = currentPage * repositoriesPerPage;\n  const indexOfFirstRepo = indexOfLastRepo - repositoriesPerPage;\n  const currentRepositories = repositories.slice(indexOfFirstRepo, indexOfLastRepo);\n  const paginate = pageNumber => {\n    setCurrentPage(pageNumber);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [user && /*#__PURE__*/_jsxDEV(Profile, {\n      user: user\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 16\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Repositories\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: currentRepositories.map(repo => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: repo.name\n      }, repo.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      currentPage: currentPage,\n      repositoriesPerPage: repositoriesPerPage,\n      totalRepositories: repositories.length,\n      paginate: paginate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n}\n_s(ProfilePage, \"iCffJr5ChSRq+f6gNnzCaxKHVMQ=\", false, function () {\n  return [useParams];\n});\n_c = ProfilePage;\nexport default ProfilePage;\nvar _c;\n$RefreshReg$(_c, \"ProfilePage\");","map":{"version":3,"names":["React","useState","useEffect","useParams","Profile","Pagination","jsxDEV","_jsxDEV","ProfilePage","_s","username","user","setUser","repositories","setRepositories","currentPage","setCurrentPage","repositoriesPerPage","fetchUser","response","fetch","userData","json","error","console","fetchRepositories","repositoriesData","indexOfLastRepo","indexOfFirstRepo","currentRepositories","slice","paginate","pageNumber","children","fileName","_jsxFileName","lineNumber","columnNumber","map","repo","name","id","totalRepositories","length","_c","$RefreshReg$"],"sources":["C:/Users/rajas/OneDrive/Desktop/GitHub Profile/my-app/src/pages/ProfilePage.js"],"sourcesContent":["\r\n// import React, { useState, useEffect } from 'react';\r\n// import { useParams } from 'react-router-dom';\r\n// import Profile from '../components/Profile';\r\n\r\n// function ProfilePage() {\r\n//   const { username } = useParams();\r\n//   const [user, setUser] = useState(null);\r\n\r\n//   useEffect(() => {\r\n//     const fetchUser = async () => {\r\n//       try {\r\n//         const response = await fetch(`https://api.github.com/users/${username}`);\r\n//         // const response = await fetch(`https://api.github.com/users/sudheerj`);\r\n//         const userData = await response.json();\r\n//         setUser(userData);\r\n//       } catch (error) {\r\n//         console.error('Error fetching user data:', error);\r\n//       }\r\n//     };\r\n\r\n//     fetchUser();\r\n//   }, [username]);\r\n\r\n//   return (\r\n//     <div>\r\n//       {user ? <Profile user={user} /> : <p>Loading...</p>}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default ProfilePage;\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport Profile from '../components/Profile';\r\nimport Pagination from '../components/Pagination'; // Import the Pagination component\r\n\r\nfunction ProfilePage() {\r\n  const { username } = useParams();\r\n  const [user, setUser] = useState(null);\r\n  const [repositories, setRepositories] = useState([]);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const repositoriesPerPage = 10; // Number of repositories to display per page\r\n\r\n  useEffect(() => {\r\n    const fetchUser = async () => {\r\n      try {\r\n        const response = await fetch(`https://api.github.com/users/${username}`);\r\n        const userData = await response.json();\r\n        setUser(userData);\r\n      } catch (error) {\r\n        console.error('Error fetching user data:', error);\r\n      }\r\n    };\r\n\r\n    fetchUser();\r\n  }, [username]);\r\n\r\n  useEffect(() => {\r\n    const fetchRepositories = async () => {\r\n      try {\r\n        const response = await fetch(`https://api.github.com/users/${username}/repos`);\r\n        const repositoriesData = await response.json();\r\n        setRepositories(repositoriesData);\r\n      } catch (error) {\r\n        console.error('Error fetching repositories:', error);\r\n      }\r\n    };\r\n\r\n    fetchRepositories();\r\n  }, [username]);\r\n\r\n  const indexOfLastRepo = currentPage * repositoriesPerPage;\r\n  const indexOfFirstRepo = indexOfLastRepo - repositoriesPerPage;\r\n  const currentRepositories = repositories.slice(indexOfFirstRepo, indexOfLastRepo);\r\n\r\n  const paginate = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {user && <Profile user={user} />}\r\n      <h2>Repositories</h2>\r\n      <ul>\r\n        {currentRepositories.map((repo) => (\r\n          <li key={repo.id}>{repo.name}</li>\r\n        ))}\r\n      </ul>\r\n      <Pagination\r\n        currentPage={currentPage}\r\n        repositoriesPerPage={repositoriesPerPage}\r\n        totalRepositories={repositories.length}\r\n        paginate={paginate}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProfilePage;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}